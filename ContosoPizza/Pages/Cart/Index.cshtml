@page
@model ContosoPizza.Pages.Cart.IndexModel
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "Cart";
}
@{
    double Bill = 0;
    decimal TotalQuantity = 0;
}
<div style="height:auto" class="padding-to-all container tab-content ftco-animate">
    <h1 class="text-center">Cart</h1>

    <div class="row">
        @if (Model.OrderDetails_Show != null)
        {
            <table class="table">
                <thead>
                    @if (Model.OrderDetails_Show.Count > 0)
                    {
                        <tr>
                            <th>Product Name</th>
                            <th>@Html.DisplayNameFor(model => model.OrderDetails_Show[0].Quantity)</th>
                            <th>Total Price</th>
                            <th>@Html.DisplayNameFor(model => model.OrderDetails_Show[0].Image)</th>
                            <th></th>
                        </tr>
                    }
                </thead>
                <form method="post">
                <tbody>
                        @for (int i = 0; i < Model.OrderDetails_Show.Count; i++)
                        {
                            var item = Model.OrderDetails_Show[i];
                            <tr>
                                <td>
                                    <a class="a-back-to-list" href="Products/Details?id=@item.ProductId">@Html.DisplayFor(modelItem => item.ProductName)</a>
                                </td>
                                <td>
                                    <input type="number" name="cartItems[@i].Quantity" value="@item.Quantity" min="1" max="100" />
                                    <input type="hidden" name="cartItems[@i].ProductId" value="@item.ProductId" />
                                </td>
                                <td>
                                        $@Html.DisplayFor(modelItem => item.TotalPrice)
                                </td>
                                <td>
                                    <img src="@item.Image" alt="Image" style="max-width: 200px; max-height: 200px;" />
                                </td>
                                <td>
                                    <input type="submit" name="Delete" value="Delete" asp-route-id="@item.ProductId" />
                                </td>
                            </tr>
                        }
                            <tr>
                                @if (Model.OrderDetails_Show.Count > 0)
                                {
                                    <td colspan="5" class="text-center">
                                        <div>
                                            <input type="submit" name="UpdateQuantity" value="Update" />
                                            <a href="/Orders/Create" class="fix-a-href">Create your order</a>
                                        </div>
                                    </td>
                                }
                                else
                                {
                                    <div class="text-center">
                                        <p>There are no Products in your Cart.</p>
                                        <a href="/Products">Go to Products</a>
                                        <div class="col-md-12" style="height:auto">
                                            <img src="~/EmployeePictures/pizza-steve-gotoproducts_transparent.png">
                                        </div>
                                    </div>
                                }                
                            </tr>
                </tbody>
                </form>
            </table>
            @if (Model.OrderDetails_DisplayQuantityPrice.Count > 0)
            {
                @foreach (var item in Model.OrderDetails_DisplayQuantityPrice)
                {
                    TotalQuantity += item.Quantity;
                    Bill += item.TotalPrice;
                }
                TotalQuantity = Math.Round(TotalQuantity, 2);
                Bill = Math.Round(Bill, 2);
                <div class="text-center product-text">
                    <div>Total Quantity: @TotalQuantity</div>
                    <div>Current Bill: @Bill $</div>
                </div>
            }
        }
        @if (Model.OrderDetails_Show.Count > 0)
        {
            <div class="text-center">
                <p>
                    Page: <input type="number" id="pageInput" style="color:black; font-weight:bold; font-size: 30px; max-width: 50px" min="1" step="1">
                </p>
            </div>
        }
    </div>

    
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            var errorMessage = '@TempData["ErrorMessage"]';
            if (errorMessage !== '') {
                $('#errorModal').modal('show');
            }
            $('#errorModal .close').click(function () {
                $('#errorModal').modal('hide');
            });
            $('#errorModal button[data-dismiss="modal"]').click(function () {
                $('#errorModal').modal('hide');
            });
        });

        var currentPage_cart = localStorage.getItem('currentPage_cart') || 1;

        if (!currentPage_cart) {
            currentPage_cart = 1;
        } else {
            currentPage_cart = parseInt(currentPage_cart); // Chuyển đổi thành số nguyên
        }

        // Cập nhật giá trị ban đầu của ô input
        document.getElementById('pageInput').value = currentPage_cart;

        // Lắng nghe sự kiện khi người dùng thay đổi giá trị trong ô input
        document.getElementById('pageInput').addEventListener('input', function (event) {
            currentPage_cart = event.target.value; //target dùng để nhận biết xem là ô nào vừa thay đổi
        });

        // Lắng nghe sự kiện khi người dùng kết thúc nhập giá trị vào ô input (nhấn Enter)
        document.getElementById('pageInput').addEventListener('change', function (event) {
            updateLink(currentPage_cart);
        });

        function updateLink(value) {
            // Lưu giá trị trang hiện tại vào localStorage
            localStorage.setItem('currentPage_cart', value);

            window.location.href = `?Page=${value}`;
        }

        currentPage_cart = 1;
        localStorage.setItem('currentPage_cart', currentPage_cart);
    </script>
}
<div class="modal fade" id="errorModal" tabindex="-1" role="dialog" aria-labelledby="errorModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="errorModalLabel">Notification</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body alert">
                @TempData["ErrorMessage"]
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>