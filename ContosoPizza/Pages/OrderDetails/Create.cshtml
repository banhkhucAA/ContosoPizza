@page
@model ContosoPizza.Pages.OrderDetails.CreateModel
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "Create";
}
@{
    float Bill = 0;
}
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

<div class="row">
    @if (HttpContextAccessor.HttpContext.Session.GetString("UserRole") == "Employee"||HttpContextAccessor.HttpContext.Session.GetString("UserRole") == "Admin")
    {
        <div class="col-md-4">
            @if (HttpContextAccessor.HttpContext.Session.GetString("UserRole") == "Employee")
            {
                <h1 class="text-center">Create</h1>

                <h4 class="text-center">Order</h4>
            }
            else if (HttpContextAccessor.HttpContext.Session.GetString("UserRole") == "Admin")
            {
                <h1 class="text-center">Details</h1>

                <h4 class="text-center">Customer</h4>
            }
            <hr />
            <div>
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="Order.Id" />
                <div class="form-group">
                    <label asp-for="Order.OrderPlacedAt" class="control-label">Order Placed At</label>
                    <input asp-for="Order.OrderPlacedAt" class="form-control" readonly />
                    <span asp-validation-for="Order.OrderPlacedAt" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Order.OrderFullFilledAt" class="control-label">Order Fullfilled At</label>
                    <input asp-for="Order.OrderFullFilledAt" class="form-control" readonly />
                    <span asp-validation-for="Order.OrderFullFilledAt" class="text-danger"></span>
                </div>
                @if (Model.Order.Employee != null)
                {
                    <div class="form-group">
                        <label asp-for="Order.EmployeeId" class="control-label">Employee</label>
                        <input class="form-control" value="@Model.Order.Employee.FirstName @Model.Order.Employee.LastName" readonly />
                    </div>
                }
                <div class="form-group form-check" readonly>
                    <label class="form-check-label" readonly>
                        <input id="IsCustomerMember" class="form-check-input" asp-for="Order.IsCustomerMember" readonly/>
                        @Html.DisplayNameFor(model => model.Order.IsCustomerMember)
                    </label>
                </div>
                <div class="form-group">
                    <label asp-for="Order.CustomerId" class="control-label">Customer Name</label>
                    @if (Model.Order.Customer != null && Model.Order.Customer.FirstName != null && Model.Order.Customer.LastName != null)
                    {
                        <input class="form-control" readonly value="@Model.Order.Customer.FirstName @Model.Order.Customer.LastName" />
                    }
                    else
                    {
                        <input class="form-control" readonly />
                        <div class="form-group">
                            <label asp-for="Order.NoneCustomerMemberEmailAddress" class="control-label">Email Address</label>
                            <input asp-for="Order.NoneCustomerMemberEmailAddress" class="form-control" value="@Model.Order.NoneCustomerMemberEmailAddress" readonly />
                        </div>
                        <div class="form-group">
                            <label asp-for="Order.NoneCustomerMemberPhoneNumber" class="control-label">Phone Number</label>
                            <input asp-for="Order.NoneCustomerMemberPhoneNumber" class="form-control" value="@Model.Order.NoneCustomerMemberPhoneNumber" readonly />
                        </div>
                    }
                </div>
                <div class="form-group">
                    <label asp-for="Order.CouponId" class="control-label">Coupon Code</label>
                    @if (Model.Order.Coupon != null && Model.Order.Coupon.CouponCode != null)
                    {
                        <input class="form-control" readonly value="@Model.Order.Coupon.CouponCode" />
                    }
                    else
                    {
                        <input class="form-control" readonly />
                    }
                </div>
                <div class="form-group">
                    <label asp-for="Order.OrderStatusId" class="control-label">Order Status</label>
                    <input class="form-control" value="@Model.Order.OrderStatus.StatusName" readonly />
                </div>
                <div class="form-group">
                    <label asp-for="Order.DeliveryMethodId" class="control-label">Delivery Method</label>
                    <input class="form-control" value="@Model.Order.DeliveryMethod.Method" readonly />
                </div>
                <div class="form-group">
                    <label asp-for="Order.PaymentMethodId" class="control-label">Payment Method</label>
                    <input class="form-control" value="@Model.Order.PaymentMethod.Method" readonly />
                </div>
                <div class="form-group">
                    <label asp-for="Order.PlacedAddress" class="control-label">Customer's placed address</label>
                    <input asp-for="Order.PlacedAddress" class="form-control" value="@Model.Order.PlacedAddress" readonly />
                </div>              
            </div>
        </div>
    }

    <div class="col-md-1"></div>

    @if (HttpContextAccessor.HttpContext.Session.GetString("UserRole") == "Employee" || HttpContextAccessor.HttpContext.Session.GetString("UserRole") == "Admin")
        {

        <div class="col-md-7">
            @if (HttpContextAccessor.HttpContext.Session.GetString("UserRole") == "Employee" && Model.Order.OrderStatus.IsActive == true)
            {
                <h1>Create</h1>

                <h4>Order Details</h4>
                <hr />
                <form method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="Order.Id" />
                <input type="hidden" asp-for="Order.DeliveryMethodId" />
                <input type="hidden" asp-for="Order.OrderStatusId" />
                <input type="hidden" asp-for="Order.PaymentMethodId" />
                <input type="hidden" asp-for="Order.CustomerId" />
                <input type="hidden" asp-for="Order.CouponId" />
                <input type="hidden" asp-for="Order.OrderFullFilledAt" />
                <input type="hidden" asp-for="Order.OrderPlacedAt" />
                <input type="hidden" asp-for="Order.PlacedAddress" />
                <input type="hidden" asp-for="Order.EmployeeId" />
                <input type="hidden" asp-for="Order.IsCustomerMember" />
                <input type="hidden" asp-for="Order.NoneCustomerMemberEmailAddress" />
                <input type="hidden" asp-for="Order.NoneCustomerMemberPhoneNumber" />
                <input type="hidden" asp-for="Order.UpdatedCancelledAt" />
                <input type="hidden" asp-for="Order.UpdatedDeActiveAt" />
                <input type="hidden" asp-for="Order.UpdatedDeliveredAt" />
                <input type="hidden" asp-for="Order.UpdatedDeliveringAt" />
                <input type="hidden" asp-for="Order.UpdatedMakingAt" />
                <input type="hidden" asp-for="Order.UpdatedReturnedAt" />
                <input type="hidden" asp-for="Order.UpdatedWaitingAt" />
                <input type="hidden" asp-for="Order.OrderNotification" />
                <div class="form-group">
                    <label asp-for="OrderDetail.OrderId" class="control-label"></label>
                    <input asp-for="OrderDetail.OrderId" readonly class="form-control" value="@Model.Order.Id" style="max-width: 300px" />
                    <span asp-validation-for="OrderDetail.OrderId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="OrderDetail.ProductId" class="control-label">Product</label>
                    <select asp-for="OrderDetail.ProductId" class="form-control" asp-items="ViewBag.ProductId" style="max-width: 300px"></select>
                </div>
                <div class="form-group">
                    <label asp-for="OrderDetail.Quantity" class="control-label"></label>
                    <input asp-for="OrderDetail.Quantity" class="form-control" style="max-width: 300px" min="1" />
                    <span asp-validation-for="OrderDetail.Quantity" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Create" name="createButton" class="btn btn-primary" />
                </div>
            </form>
                <br />
            }

        

                <h1 class="text-center">Your recent items</h1>

                <h4 class="text-center">Order Details</h4>
                <hr />

            <table class="table">
                <thead>
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.OrderDetails_Show[0].Product.ProductName)</th>
                        <th>@Html.DisplayNameFor(model => model.OrderDetails_Show[0].Quantity)</th>
                        <th>@Html.DisplayNameFor(model => model.OrderDetails_Show[0].TotalPrice)</th>
                        <th>@Html.DisplayNameFor(model => model.OrderDetails_Show[0].Product.Image)</th>
                        <th></th>
                    </tr>
                </thead>
                <form method="post">
                    <tbody>
                        @for (int i = 0; i < Model.OrderDetails_Show.Count; i++)
                        {
                            var item = Model.OrderDetails_Show[i];
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Product.ProductName)
                                </td>
                                <td>
                                    <input type="number" asp-for="@Model.OrderDetails_Show[i].Quantity" value="@item.Quantity" min="1" max="100" />
                                    <input type="hidden" asp-for="@Model.OrderDetails_Show[i].ProductId" value="@item.ProductId" />
                                    <input type="hidden" asp-for="@Model.OrderDetails_Show[i].OrderId" value="@item.OrderId"/>
                                    <input type="hidden" asp-for="@Model.OrderDetails_Show[i].Id" value="@item.Id"/>
                                </td>
                                <td>
                                    $@Html.DisplayFor(modelItem => item.TotalPrice)
                                </td>
                                <td>
                                    <img src="@item.Product.Image" alt="Image" style="max-width: 200px; max-height: 200px;" />
                                </td>
                                @if (HttpContextAccessor.HttpContext.Session.GetString("UserRole") == "Employee" && Model.Order.OrderStatus.IsActive == true && Model.OrderDetails_Show.Count > 0)
                                {
                                    <td>
                                        <div>
                                            <input type="submit" name="UpdateQuantity" value="Update" class="btn btn-primary btn-icon-split search">
                                        </div>
                                        <div>
                                        <input type="submit" asp-route-id="@Model.OrderDetails_Show[i].Id" name="DeleteProduct" value="Delete" class="btn btn-danger btn-icon-split">
                                        </div>
                                    </td>
                                }
                            </tr>
                             {Bill = Bill+(float)item.TotalPrice; }
                        }
                    </tbody>
                </form>
            </table>

            <div>Delivery Price: $@Model.Order.DeliveryMethod.Price</div>
                    <div>Payment Price: $@(Model.Order.PaymentMethod.Price)</div>
                @if (Model.Order.Coupon==null)
                {
                    <div>Total Discount: $0</div>
                    <div>Total Price: $@(Math.Round(Bill + @Model.Order.DeliveryMethod.Price + @Model.Order.PaymentMethod.Price, 2))</div>
                    @if (HttpContextAccessor.HttpContext.Session.GetString("UserRole") == "Customer")
                    {
                        <hr />
                        <div>Order placed at: @Model.Order.OrderPlacedAt</div>
                        @if(Model.Order.OrderFullFilledAt!=null)
                        {
                            <div>Order fullfilled at: @Model.Order.OrderFullFilledAt</div>
                        }
                    }
                }else
                {
                    <div>Total Discount: $@(Math.Round((float)Bill * @Model.Order.Coupon.DiscountAmount/100, 2))</div>
                    var totalPrice = Math.Round(Bill + @Model.Order.DeliveryMethod.Price + @Model.Order.PaymentMethod.Price - (float)(Bill * @Model.Order.Coupon.DiscountAmount / 100), 2);
                    <div>Total Price: $@(Math.Round(totalPrice, 2))</div>
                    @if (HttpContextAccessor.HttpContext.Session.GetString("UserRole") == "Customer")
                    {
                        <hr />
                        <div>Order placed at: @Model.Order.OrderPlacedAt</div>
                        @if (Model.Order.OrderFullFilledAt != null)
                        {
                        <div>Order fullfilled at: @Model.Order.OrderFullFilledAt</div>
                        }
                    }
                }
                @if (HttpContextAccessor.HttpContext.Session.GetString("UserRole") == "Employee")
                {
                    <form method="post">
                        <div class="form-group">
                            <input type="hidden" asp-for="Order.Id" />
                            <input type="submit" value="Send email/Finish order" name="SendEmail" class="btn btn-primary" style="background-color:orange"/>
                        </div>
                    </form>
                }
                @if (HttpContextAccessor.HttpContext.Session.GetString("UserRole") == "Employee")
                {
                    <a class="btn btn-primary" href="/Orders/Index">Back to List</a>
                }else
                {
                <a class="btn btn-primary" href="/StatisticalReport/ReportOrder?OrderBy=">Back to Order Report</a>
            }
            </div>
        }
    
    /////customer
        else if ((HttpContextAccessor.HttpContext.Session.GetString("UserRole") == "Customer"))
        {
        <h1 class="text-center">Your recent items</h1>

        <h4 class="text-center">Order Details</h4>
        <hr />
            <div class="text-center">
                    <table class="table mx-auto" style="max-width:60%">
                        <thead>
                            <tr>
                                <th>@Html.DisplayNameFor(model => model.OrderDetails_Show[0].Product.ProductName)</th>
                                <th>@Html.DisplayNameFor(model => model.OrderDetails_Show[0].Quantity)</th>
                                <th>@Html.DisplayNameFor(model => model.OrderDetails_Show[0].TotalPrice)</th>
                                <th>@Html.DisplayNameFor(model => model.OrderDetails_Show[0].Product.Image)</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.OrderDetails_Show)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Product.ProductName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Quantity)
                                    </td>
                                    <td>
                                        $@Html.DisplayFor(modelItem => item.TotalPrice)
                                    </td>
                                    <td>
                                        <img src="@item.Product.Image" alt="Image" style="max-width: 200px; max-height: 200px;" />
                                    </td>                       
                                </tr>
                                { Bill = Bill + (float)item.TotalPrice; }
                            }
                        </tbody>
                    </table>
            

                <div>Delivery Price: $@Model.Order.DeliveryMethod.Price</div>
                <div>Payment Price: $@(Model.Order.PaymentMethod.Price)</div>
                @if (Model.Order.Coupon == null)
                {
                    <div>Total Discount: $0</div>
                    <div>Total Price: $@(Math.Round(Bill + @Model.Order.DeliveryMethod.Price + @Model.Order.PaymentMethod.Price, 2))</div>
                    @if (HttpContextAccessor.HttpContext.Session.GetString("UserRole") == "Customer")
                    {
                        <hr />
                        <div>Order placed at: @Model.Order.OrderPlacedAt</div>
                        @if (Model.Order.OrderFullFilledAt != null)
                        {
                            <div>Order fullfilled at: @Model.Order.OrderFullFilledAt</div>
                        }
                    }
                }
                else
                {
                    <div>Total Discount: $@(Math.Round((float)Bill * @Model.Order.Coupon.DiscountAmount / 100, 2))</div>
                    var totalPrice = Math.Round(Bill + @Model.Order.DeliveryMethod.Price + @Model.Order.PaymentMethod.Price - (float)(Bill * @Model.Order.Coupon.DiscountAmount / 100), 2);
                    <div>Total Price: $@(Math.Round(totalPrice, 2))</div>
                }
                @if (@Model.Order.OrderStatus.StatusName == "Making")
                {
                    <p style="color:red; font-weight:bold">Your order is being made. Contact us if there is any problem.</p>
                }
                else if (@Model.Order.OrderStatus.StatusName == "Delivering")
                {
                    <p style="color:red; font-weight:bold">Your order is being delivered. Contact us if there is any problem.</p>
                }
                else if (@Model.Order.OrderStatus.StatusName == "Delivered")
                {
                    <p style="color:red; font-weight:bold">Your order has been delivered successfully. Contact us if there is any problem.</p>
                }
                else if (@Model.Order.OrderStatus.StatusName == "Canceled")
                {
                    <p style="color:red; font-weight:bold">Your order has been cancelled. Contact us if there is any problem.</p>
                }
                else if (@Model.Order.OrderStatus.StatusName == "Returned")
                {
                    <p style="color:red; font-weight:bold">Your order has been returned. Contact us if there is any problem.</p>
                }
                else if (@Model.Order.OrderStatus.StatusName == "Waiting")
                {
                    <p style="color:red; font-weight:bold">Your order is waiting in line. Contact us if there is any problem.</p>
                }
                else if (@Model.Order.OrderStatus.StatusName == "Delivering")
                {
                    <p style="color:red; font-weight:bold">Your order has been deactivated. Contact us if there is any problem.</p>
                }
                
                <a class="a-back-to-list" href="/Orders/Index">Back to List</a>

        </div>
        }
</div> 


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            var errorMessage = '@TempData["ErrorMessage"]';
            if (errorMessage !== '') {
                $('#errorModal').modal('show');
            }
            $('#errorModal .close').click(function () {
                $('#errorModal').modal('hide');
            });
            $('#errorModal button[data-dismiss="modal"]').click(function () {
                $('#errorModal').modal('hide');
            });
        });
    </script>
}
<div class="modal fade" id="errorModal" tabindex="-1" role="dialog" aria-labelledby="errorModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="errorModalLabel">Notification</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body alert">
                @TempData["ErrorMessage"]
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
